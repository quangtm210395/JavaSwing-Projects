/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.demo.gui;

import com.demo.entity.User;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

/**
 *
 * @author ADMIN
 */
public class ChatDialog extends javax.swing.JDialog {

    /**
     * Creates new form ChatDialog
     */
    private ChatGUI parent;
    private User toUser;
    private User current;
    private Object object;
    public ChatDialog(ChatGUI parent,User toUser,User current) {
        super(parent, false);
        this.parent = parent;
        this.toUser = toUser;
        this.current = current;
        
        initComponents();
        addListener();
        
        this.setTitle(toUser.getName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstChat = new javax.swing.JList<>();
        txtChat = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        lbl = new javax.swing.JLabel();

        jScrollPane1.setViewportView(lstChat);

        btnSend.setText("Send");

        btnAdd.setText("Add file");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtChat, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                            .addComponent(lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtChat)
                    .addComponent(btnSend, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(lbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addListener() {
        btnSend.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String mess = txtChat.getText();
                if (!mess.isEmpty()) {
                    parent.sendMessage(mess, toUser.getName(), 2);
                    loadMessage(txtChat.getText(), current.getName());
                    lbl.setText("");
                    txtChat.setText("");
                }
            }
        });
        
        btnAdd.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                FileInputStream fis = null;
                try {
                    // TODO add your handling code here:
                    JFileChooser fs = new JFileChooser();
                    File file = null;
                    int val = fs.showOpenDialog(parent);
                    if(val == JFileChooser.APPROVE_OPTION)
                    {
                        String fileName = fs.getSelectedFile().getName();
                        String path = fs.getSelectedFile().getPath();
                        lbl.setText(fileName);
                        file = fs.getSelectedFile();
                    }   
                    fis = new FileInputStream(fs.getSelectedFile().getPath());
                    OutputStream os = parent.socket.getOutputStream();
                    int packetSize = 65536;
                    byte[] buffer = new byte[packetSize];
                    parent.oos.write(buffer);
                    int read = 0;
                    do {                
                        os.write(buffer,0,read);
                        System.out.println(read);

                    } while ((read = fis.read(buffer)) != -1);
                    os.flush();
                    System.out.println("sent");
                    fis.close();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(ChatDialog.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(ChatDialog.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        });
        
        txtChat.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
            }

            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    String mess = txtChat.getText();
                    if (!mess.isEmpty()) {
                        parent.sendMessage(mess, toUser.getName(), 2);
                        loadMessage(txtChat.getText(), current.getName());
                        lbl.setText("");
                        txtChat.setText("");
                    }
                }
            }

            @Override
            public void keyReleased(KeyEvent e) {
            }
        });
    }
    
    private ArrayList<String> messages = new ArrayList<>();
    public void loadMessage(String message,String sender)
    {
        messages.add(sender+" : "+message);
        DefaultListModel<String> model = new DefaultListModel<>();
        int index =0;
        for (String item : messages) {
            model.add(index, item);
            index++;
        }
        lstChat.setModel(model);
        lstChat.setSelectedIndex(index-1);
        lstChat.repaint();
        
    }
    
    public void sendFile(String path)
    {
        try {
            FileOutputStream fos = new FileOutputStream(path);
            ObjectOutputStream oos = new ObjectOutputStream(fos);
            oos.writeObject(object);
            oos.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(ChatDialog.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(ChatDialog.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    
    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnSend;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl;
    private javax.swing.JList<String> lstChat;
    private javax.swing.JTextField txtChat;
    // End of variables declaration//GEN-END:variables
}
